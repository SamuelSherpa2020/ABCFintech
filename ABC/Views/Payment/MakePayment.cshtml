

        @model ABC.Dtos.PaymentDto.CreatePaymentDto

@{
    ViewBag.Title = "Create Payment Detail";
}
<style>
    .form-group {
        width: 300px;
        margin: 20px 0 20px 0;
    }
</style>

<h2>Create Payment Detail</h2>

<form asp-action="MakePayment" method="post">
    <div class="form-group">
        <label asp-for="BankId" class="control-label"></label>
        <select asp-for="BankId" class="form-control" asp-items="ViewBag.Banks"></select>
        <span asp-validation-for="BankId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="ReceiverAccountNumber" class="control-label"></label>
        <input asp-for="ReceiverAccountNumber" class="form-control" />
        <span asp-validation-for="ReceiverAccountNumber" class="text-danger"></span>
        @if (!string.IsNullOrEmpty(ViewBag.AccountDontExist))
        {
            <p class="text-danger">@ViewBag.AccountDontExist</p>
        }
    </div>

    <div class="form-group">
        <label for="Currency" class="control-label">Currency</label>
        <select id="CurrencyDropdown" class="form-control">
            <option value="">Select Currency</option>
            @foreach (var currency in (List<SelectListItem>)ViewBag.Currencies)
            {
                <option value="@currency.Value">@currency.Text</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label asp-for="Unit" class="control-label"></label>
        <input asp-for="Unit" id="Unit" class="form-control" readonly />
        <span asp-validation-for="Unit" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="ExchangeRate" class="control-label"></label>
        <input asp-for="ExchangeRate" id="ExchangeRate" class="form-control" readonly />
        <span asp-validation-for="ExchangeRate" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="TransferedAmount" class="control-label"></label>
        <input asp-for="TransferedAmount" id="TransferedAmount" class="form-control" />
        <span asp-validation-for="TransferedAmount" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="PayoutAmount" class="control-label"></label>
        <input asp-for="PayoutAmount" id="PayoutAmount" class="form-control" readonly />
        <span asp-validation-for="PayoutAmount" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</form>

@section Scripts {
    <script>
        function calculatePayoutAmount() {
            const transferedAmount = parseFloat(document.getElementById('TransferedAmount').value) || 0;
            const exchangeRate = parseFloat(document.getElementById('ExchangeRate').value) || 0;
            const unit = parseFloat(document.getElementById('Unit').value) || 1;

            // Calculate payout amount
            const payoutAmount = (transferedAmount * (exchangeRate / unit)).toFixed(2);

            // Update the PayoutAmount field
            document.getElementById('PayoutAmount').value = payoutAmount;
        }

        document.getElementById('CurrencyDropdown').addEventListener('change', function () {
            const selectedValue = this.value;
            if (selectedValue) {
                const [iso3, unit, rate] = selectedValue.split('|');
                document.getElementById('Unit').value = unit;
                document.getElementById('ExchangeRate').value = rate;
            } else {
                document.getElementById('Unit').value = '';
                document.getElementById('ExchangeRate').value = '';
            }

            // Recalculate the payout amount when currency changes
            calculatePayoutAmount();
        });

        document.getElementById('TransferedAmount').addEventListener('input', function () {
            // Recalculate the payout amount when transfered amount changes
            calculatePayoutAmount();
        });
    </script>
    <partial name="_ValidationScriptsPartial" />
}
